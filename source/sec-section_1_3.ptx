<?xml version="1.0" encoding="UTF-8"?>

<section xml:id="sec-section_1_3" xmlns:xi="http://www.w3.org/2001/XInclude">
  <title>Installation guide </title>
  <p>Download the latest version of the software from the official page of Arduino IDE. Link https://www.arduino.cc/en/software, you need to select the software which is compatible for your OS (Windows/IoS/ Linux). When your download is completed, unzip the zip file from downloads folder in your computer/laptops.</p>
  <figure>
    <image source="images/arduino_page_1.JPG" width="70%"/>
    <caption> Official page of Arduino IDE.</caption>
  </figure>
  <figure>
    <image source="images/arduino_page_2.JPG" width="70%"/>
    <caption>Extract the Compressed folder in the laptop/PC.</caption>
  </figure>
  <figure>
    <image source="images/arduino_page_3.JPG" width="70%"/>
    <caption>Double click the icon to open the Arduino software icon.</caption>
  </figure>
  <p><term>Launch the Arduino IDE</term></p>
  <p>After the installation procedure is completed, open the Arduino software.</p>
  <figure>
    <image source="images/arduino_page_4.JPG" width="70%"/>
    <caption>Splash Screen of Arduino IDE</caption>
  </figure>
  <p>After a few seconds, the splash screen will disappear and the Arduino IDE will be displayed.</p>
  <figure>
    <image source="images/page_4_improved.JPG" width="70%"/>
    <caption>Code Editor</caption>
  </figure>
  <p><term><em>Shortcut Menu</em></term></p>
  <p>Frequently used short cut menus are explained in detailed in fig 1.2.8</p>
  <figure>
    <image source="images/arduino_page_6.JPG" width="40%"/>
    <caption>Description of each icon</caption>
  </figure>
  <ol>
    <li>
      <p>
        <term>Verify Icon,</term>selection of this icon will the compile the code, to check whether there is any compilation error is present in the code.
      </p>
    </li>
    <li>
      <p>
        <term>Upload Icon,</term>selection of this icon, will upload the code to the board.
      </p>
    </li>
    <li>
      <p>
        <term>New File Icon,</term>selection of this icon will open a new file, a new empty file will be created.
      </p>
    </li>
    <li>
      <p>
        <term>Open File Icon, </term>selecting this icon, existing file in the software will be opened.
      </p>
    </li>
    <li>
      <p>
        <term>Save Icon,</term>this is the shortcut key for saving the file.
      </p>
    </li>
    <li>
      <p>
        <term>Google Lens Icon </term>is used to receive and transmit the data from micro controller to serial monitor.
      </p>
    </li>
  </ol>
  <image source="images/menu.JPG" width="40%"/>
<p>We will use all these menu options for upcoming chapters. Click file->Menu ->Preferences. Then check for verbosity options for compilation and uploading the code which is highlighted in the image below,</p>
<figure>
  <image source="images/arduino_page_7.JPG" width="40%"/>
  <caption>verbose output is changed to upload</caption>
</figure>
<p>Hurray, now we are ready to execute the software to run the program.</p>
<term>Powering up the Board</term>
<p>Connect Arduino board to your laptop or PC using USB cable. Green LED bulb (Labelled PWR) in the Arduino board will blink to indicate that the board is connected. </p>
<p>There are other ways to power to power up the board, they are. In this section will discuss how to power up the Arduino board.</p>
<ol>
  <li>
    <p>
      Using USB cable
    </p>
  </li>
  <li>
    <p>
      Using DC power Jack
    </p>
  </li>
  <li>
    <p>
      Using 9V Battery
    </p>
  </li>
</ol>
<term><p>USB Cable</p></term>
<image source ="images/usb_cable.JPG" width="40%"/>
<p>Arduino board can be powered via an USB cable.  USB cable can be connected to Laptop or a computer. When the computer recognizes the board, 5V current will be supplied. </p>
<term><p>DC Power Jack</p></term>
<image source ="images/DC_Power.JPG" width="40%"/>
<p>Barrel connector is 2.1 mm in diameter. The center pin is a positive pin and outer pin is ground pin. Connector can supply 7-12V of input. The voltage regulator in the board regulates the 12V power into 5V.</p>
<term><p>9V battery </p></term>
<sidebyside widths="25% 25%" valign="middle">
  <image source ="images/9v_battery_1.JPG" width="40%" decorative="yes"/>
  <image source ="images/9v_battery_2.JPG" width="40%" decorative="yes"/>
</sidebyside>
<p>The 9V battery the supply will range between 7-9V. Connect the Vin pin of the Arduino to positive terminal of the battery and ground of the battery is connected to ground of the Arduino.Vin port allows the input power of between 7-12 volt.</p>
<p>Let’s first connect our Arduino board to the laptop using the USB cable. Below is the image to refer.</p>
<figure>
  <image source="/images/Arduino_UNO_BOARD.JPG" width="40%"/>
  <caption>Arduino UNO board is connected to the laptop via USB cable</caption>
</figure>
<p>After connecting, when the PC/Laptop is powered on, the power LED on the Arduino board will indicate that board is in ON state. Now we will verify whether window’s OS recognizes. Goto Control Panel->Device Manager</p>
<figure>
  <image source="/images/port.JPG" width="40%"/>
  <caption>choose ports (COM LPT)</caption>
</figure>
<figure>
  <image source="/images/com.JPG" width="40%"/>
  <caption>COM7 is our port for the Arduino</caption>
</figure>
<p>Check the port section to know which port is connected to the current Arduino board. Here it is (COM7) which is indicated by the red arrow.</p>
<p>Well, we will start programming for Arduino. Understand the structure and code style of Arduino. Arduino program is called as sketch. In the community of Arduino, words like sketch, code and programs can be used. The sketch file will be saved in. ino extension.</p>
<p>When we open Arduino IDE, a blank sketch is opened to program. Here Arduino IDE has large number of example files. That can be found from Examples option in File menu.  Now we will code the basic sketch blink. It is similar to Hello World in other programming languages.</p>
<figure>
  <image source="/images/blink_code.JPG" width="40%"/>
  <caption> (i) selecting a blink code from examples                (ii): view of blink code </caption>
</figure>
<term>Structure of the code</term>
<program>
  void setup() {
    pinMode(8, OUTPUT);
    }
    // the loop function runs over and over again forever
    void loop() {
    digitalWrite(8, HIGH) // turn the LED on (HIGH is the voltage level)
    delay(1000);  // wait for a second
    digitalWrite(8, LOW); // turn the LED off by making the voltage LOW
    delay(1000);     // wait for a second
    }    
</program>
<p>Now we will discuss about how the sketch works. The code enclosed in setup () can be executed once. The code which is enclosed as Loop () can execute repeatedly. Double slash (//) indicates the beginning of single line comment. In Setup (), pinMode is used to set the mode for pins which we are going to mention. The pin can be configured in both the ways as input and also as an output. </p>
<p>In loop (), digitalWrite () writes HIGH for (5V or 3.3V) for UNO boards or LOW (0V) to specify the output pin. Delay () pauses the execution of the program for a certain number of milliseconds. </p>
<p>To explain the working of the program, initiating LED pin 8 as output using Pin mode. In loop () pin 8 will turn on and off alternatively with the delay of few seconds. It is necessary to select the appropriate </p>
<figure>
  <image source="/images/appropriate_board.JPG" width="40%"/>
  <caption>Selecting the appropriate board</caption>
</figure>
<p>board which matches the board, to upload the code into the Arduino board.  Select Tools->Board –> select your version of your board.</p>
<p>After selecting the board select port to select the port, go to Tools->Port in menu. This will be reserved ports like COM1 or COM2.</p>
<figure>
  <image source="/images/right_port.JPG" width="40%"/>
  <caption>Selecting the right port</caption>
</figure>
<p>bove mentioned are the two necessary steps to upload the code correctly into board. Also, we can choose Tools->Get Board Info to know the board information</p>
<figure>
  <image source="/images/succesful_compliation.JPG" width="40%"/>
  <caption>message for successful compilation. </caption>
</figure>
<p>To check whether the code has no error, we need to compile the code. We can compile by selecting Sketch->compile from menu. The bottom part of the IDE is console to display the </p>
<figure>
  <image source="/images/sucessful_upload.JPG" width="40%"/>
  <caption>Message for successful uploading </caption>
</figure>
<p>output operations. If the compilation is success, then the console will display the message. Now we need to do upload the sketchto the board.  Select Sketch->Upload menu option to upload the code.</p>
<p>Once when the code is uploaded acknowledgement message will be displayed as in the figure. The LED will blink alternatively.</p>
<subsection xml:id="subsec-Thonny-IDE">
  <title>Introduction to Thonny IDE</title>
  <p>
    Thonny is an IDE developed by python, designed for beginners. Thonny IDE is freely available for Windows, Linux and Mac OS Platforms. Follows a unique way to run the code, bypasses the code deeply and checks for any compilation errors, evaluation can be done based on step-by-step expression. Python 3.7 is built in software.  The official website for downloading the software is https://thonny.org/.Once when the code is uploaded acknowledgement message will be displayed as in the figure. The LED will blink alternatively.
  </p>
  <figure>
    <image source="/images/tonny.JPG" width="60%"/>
    <caption>Official page to download Thonny IDE </caption>
  </figure>
  <figure>
    <image source="/images/tonny_1.JPG" width="50%"/>
    <caption>After completing the download, runs the software in your system </caption>
  </figure>
  <figure>
    <image source="/images/tonny_source.JPG" width="50%"/>
    <caption>View of the software </caption>
  </figure>
  <term>Description of each icon </term>
  <p>
    Editor is used to write the code and run it output will be displayed in shell.
  </p>
  <image source="/images/tonny_menu.JPG" width="50%"/>
 <ol> 
  <li>
    <p>
      <term>Paper icon</term>, allows creating a new file. A new file can be created by selecting this icon or   choosing the option from menu, the File –> New 
    </p>
  </li>
  <li>
    <p>
      <term>File open icon</term>, is used to open the folder in your computer, to open the existing file we can select the File->Open from the menu can also open the file from the computer.
    </p>
  </li>
  <li>
    <p>
      <term>Save icon</term>, is used to save the program
    </p>
  </li>
  <li>
    <p>
      <term>The play icon</term> is used to run the code, the written code will be executed. 
    </p>
  </li>
  <li>
    <p>
      <term>The bug icon</term> will compile your code line by line. Bugs may come in by any form, it may be due to inappropriate syntax or incorrect logic.
    </p>
  </li>
  <li>
    <p>
      <term>Jump icon</term>, it takes big step, jumps to next line or another block of code.
    </p>
  </li>
  <li>
    <p>
      <term>One step downward icon</term> it takes small step, jumps into each expression of the code.
    </p>
  </li>
  <li>
    <p>
      <term>Right arrow</term>, will tell python exit out the debugger
    </p>
  </li>
  <li>
    <p>
      <term>Resume icon</term>, allow the program to toggle between debug mode to run mode, to instruct the compiler to run the program.
    </p>
  </li>
  <li>
    <p>
      <term>Stop icon</term> will stop the code from the execution  
    </p>
  </li>
</ol>

</subsection>
</section>